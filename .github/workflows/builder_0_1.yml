name: CI Builder Pi[0-1] 

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'  
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
  release:
    branches:
      - main
    types: [published]
    paths-ignore:
      - '**.md'

env:
  RPI_TYPE: 0-1
  CURL_VERSION: 7.72.0
  CCACHE_COMPRESS: 1
  CCACHE_DIR: $HOME/.ccache
  USER_SFTP: ${{ secrets.USER_SFTP }}
  PASSWORD_SFTP: ${{ secrets.PASSWORD_SFTP }}

jobs:
  builder-base:
    name: Base GCC 32-bit Builder Pi[0-1]
    runs-on: macos-latest
    strategy:
      matrix:
        gcc_versions: [10.2.0]
        rpios_types: [bullseye]
    env:
      RPIOS_TYPE: ${{ matrix.rpios_types }}
      GCC_VERSION: ${{ matrix.gcc_versions }}
      COMPILER_TYPE: CROSS
      BASE: true
    steps:
      - uses: actions/checkout@v2
      - name: before_install
        run: |
          brew update
          brew install dos2unix
          dos2unix build-scripts/CI/CIBB_32b 
          chmod +x build-scripts/CI/CIBB_32b 
          dos2unix patches/curl_stfp_patcher
          chmod +x patches/curl_stfp_patcher
          dos2unix utils/SF_deployer
          chmod +x utils/SF_deployer
        if: success()
      - name: install
        run: |
          brew install gcc gperf git flex texinfo pigz gawk gfortran texinfo bison ncurses ccache autoconf automake libssh2 openssl unzip wget figlet
          echo 'export PATH="/usr/lib/ccache:$PATH"' | tee -a ~/.bashrc
          source ~/.bashrc && echo $PATH
        if: success()
      - name: script
        run: bash build-scripts/CI/CIBB_32b -g $GCC_VERSION -r $RPI_TYPE -o $RPIOS_TYPE
        shell: bash
        if: success() && (github.event_name == 'pull_request' || github.event_name == 'release' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[DEBUG]')))
      - name: before_script
        run: bash patches/curl_stfp_patcher
        shell: bash
        if: success() && github.event_name == 'release' && github.event.action == 'published'
      - name: deploy
        run: bash utils/SF_deployer
        shell: bash
        if: success() && github.event_name == 'release' && github.event.action == 'published'

  builder-cross:
    name: Cross GCC 32-bit Builder Pi[0-1]
    needs: builder-base
    runs-on: macos-latest
    strategy:
      matrix:
        gcc_versions: [10.3.0]
        rpios_types: [bullseye]
    env:
      GCC_VERSION: ${{ matrix.gcc_versions }}  
      RPIOS_TYPE: ${{ matrix.rpios_types }} 
      COMPILER_TYPE: CROSS
    steps:
      - uses: actions/checkout@v2
      - name: before_install
        run: |
          brew update
          brew install dos2unix -y
          dos2unix build-scripts/CI/CICTB_32b 
          chmod +x build-scripts/CI/CICTB_32b 
          dos2unix patches/curl_stfp_patcher
          chmod +x patches/curl_stfp_patcher
          dos2unix utils/SF_deployer
          chmod +x utils/SF_deployer
        if: success()
      - name: install
        run: |
          brew install gcc gperf git flex texinfo pigz gawk gfortran texinfo bison ncurses ccache autoconf automake libssh2 openssl unzip wget figlet
          echo 'export PATH="/usr/lib/ccache:$PATH"' | tee -a ~/.bashrc
          source ~/.bashrc && echo $PATH
        if: success()
      - name: script
        run: bash build-scripts/CI/CICTB_32b -g $GCC_VERSION -r $RPI_TYPE -o $RPIOS_TYPE
        shell: bash
        if: success()
      - name: before_script
        run: bash patches/curl_stfp_patcher
        shell: bash
        if: success() && github.event_name == 'release' && github.event.action == 'published'
      - name: deploy
        run: bash utils/SF_deployer
        shell: bash
        if: success() && github.event_name == 'release' && github.event.action == 'published'

  builder-native:
    name: Native GCC 32-bit Builder Pi[0-1]
    needs: [builder-base, builder-cross]
    runs-on: macos-latest
    strategy:
      matrix:
        gcc_versions: [10.3.0]
        rpios_types: [bullseye]
    env:
      GCC_VERSION: ${{ matrix.gcc_versions }}  
      RPIOS_TYPE: ${{ matrix.rpios_types }}  
      COMPILER_TYPE: NATIVE
    steps:
      - uses: actions/checkout@v2
      - name: before_install
        run: |
          brew update
          brew install dos2unix -y
          dos2unix build-scripts/CI/CINTB_32b 
          chmod +x build-scripts/CI/CINTB_32b 
          dos2unix patches/curl_stfp_patcher
          chmod +x patches/curl_stfp_patcher
          dos2unix utils/SF_deployer
          chmod +x utils/SF_deployer
        if: success()
      - name: install
        run: |
          brew install gcc gperf git flex texinfo pigz gawk gfortran texinfo bison ncurses ccache autoconf automake libssh2 openssl unzip wget figlet
          echo 'export PATH="/usr/lib/ccache:$PATH"' | tee -a ~/.bashrc
          source ~/.bashrc && echo $PATH
        if: success()
      - name: script
        run: bash build-scripts/CI/CINTB_32b -g $GCC_VERSION -r $RPI_TYPE -o $RPIOS_TYPE
        shell: bash
        if: success()
      - name: before_script
        run: bash patches/curl_stfp_patcher
        shell: bash
        if: success() && github.event_name == 'release' && github.event.action == 'published'
      - name: deploy
        run: bash utils/SF_deployer
        shell: bash
        if: success() && github.event_name == 'release' && github.event.action == 'published'